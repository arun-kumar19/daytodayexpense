<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Welcome</title>
  <!-- Include Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  </head>
<body class="bg-light">

<div class="container mt-2 bg-light">
<div class="row">
  <div class="col-sm" id="first">
<button type="submit" id="buypremium" class="btn btn-success" onclick="buypremium()">Buy Premium</button>
  </div>
 <div class="col-sm border border-primary">
 
    <div class="form-group">
      <label for="money">Money:</label>
      <input type="text" class="form-control" id="money" name="money" required>
    </div>
    <div class="form-group">
      <label for="description">Description:</label>
      <input type="text" class="form-control" id="description" name="description" required>
    </div>
    <label> Select Category </label>
    <div class="form-group">
      
              <select id="category">
              <option value="Petrol">Petrol</a>
              <option value="Grocery">Grocery</a>
              <option value="Clothing">Clothing</a>
              <option value="Salary">Salary</a>
              <option value="Outdoor">Outdoor</a>
              <option value="Other">Other</a>
            </select>
            
    </div>
  <input type="hidden" id="expenceid">    
    <button type="submit" class="btn btn-primary" id="submit" onclick="addexpence()">Add Expence</button>
    <h3 id="userexpences"></h3>
    <ul id="expencelist"></ul>
 
</div>
<div class="col-sm">
<p class="ml-5" id="username"></p>
</div>
</div>
<div class="row">
  <div class="col-sm" id="secondrow">
    <h1 id="leaderboardheading"></h1>
    <ul id="leaderboarddata"></ul>    
  </div>
</div>

<!-- Include Bootstrap JS and jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>

async function fetchexpences(){

    try{
      const tokendata=localStorage.getItem('token');
        const abc=JSON.parse(tokendata)
      const token=abc.tokenid;
      const ispremiumuser=abc.ispremiumuser;
      console.log('token-',token,' ispremiumuser-',ispremiumuser);
        //  const id=document.getElementById('userid').value
          const response=await axios.get('userexpences',{headers:{'Authorization':token}});
          const user=response.data;
          const userstatus=await axios.get('userstatus',{headers:{'Authorization':token}});
          console.log('userstatus=',userstatus)
          if(userstatus){
        const username=userstatus.data.name;
        console.log('userstatus=',user, 'username=',username);
        const formatString=`Welcome ${username}!`;
        document.getElementById('username').innerText=formatString
       // console.log('user status=',userstatus.data);

          }
        
        if(ispremiumuser){
            const multipleclass='btn btn-success'
          document.getElementById('buypremium').textContent='You are a premium user';
          const div=document.getElementById("first");
          const button=document.createElement("button");
          button.className=multipleclass;
          button.onclick=showleaderboard;
          button.type="submit"
          button.textContent="Leader Board";
          div.appendChild(button);
        }
   //    console.log('loaded content=',user.length); 

       const userList = document.getElementById('expencelist');

        // Render each user as a list item
          for(let i=0;i<user.length;i++){
            document.getElementById("userexpences").textContent="Expenses"
          const listItem = document.createElement('li');
            const editButton=document.createElement('button');
            editButton.value='Edit';
            editButton.id=user[i].id;
            editButton.textContent='Edit';
            editButton.className='editItem';
            editButton.onclick=editItem;
            const deleteButton=document.createElement('button');
            deleteButton.value='delete';
            deleteButton.id=user[i].id;
            deleteButton.onclick=deleteItem;
            deleteButton.className='deleteItem';
            deleteButton.textContent='Delete';

           const value= `${user[i].money} ${user[i].description} ${user[i].category} `;
           listItem.textContent=value;
           listItem.appendChild(editButton);
           listItem.appendChild(deleteButton);
          userList.appendChild(listItem);

//uploading and redering code above

async function editItem(event){

const id=event.target.id;
//console.log('edit item id=',id);
console.log('edit product fun2 called and id is=',event.target.id);
    
try{
    const response=await axios.get(`/editexpence/${id}`);

const user = response.data;
console.log('response=',user);
// Get the <ul> element to append the users
const userList = document.getElementById('expencelist');

// Render each user as a list item

document.getElementById('money').value=user.money;
document.getElementById('description').value=user.description;
document.getElementById('category').value=user.category;
//document.getElementById('userid').value=user.id;
document.getElementById('submit').innerHTML='Update Product';
document.getElementById('submit').onclick=UpdateProduct;
document.getElementById('expenceid').value=user.id;
const li=event.target.parentElement;
console.log('li=',li);
userList.removeChild(li);      
}
catch(error){
    console.log('getting error while fetching data from server =',error);

}
} //edit function closed

async function deleteItem(event){
console.log('product deleted  fun1 successfully');
//  alert(event.target.id)
const id=event.target.id;
console.log('value of id=',id);
console.log(`Button ${id} was clicked.`);
try{
const response=await axios.delete(`/deleteexpence/${id}`,{headers:{'Authorization':token}})
console.log('delete response=',response);

if(response){
  console.log('User Deleted :',response.data)
const userList = document.getElementById('expencelist');
const li=event.target.parentElement;
console.log(li);

userList.removeChild(li);

}
else{
console.log('something went wrong');
}

}catch(error){
    console.log('getting error while fetching data from server =',error);

}

} //delete function closed

async function UpdateProduct(event){

console.log('update product1 function called');
const id=document.getElementById('expenceid').value;
console.log('update expence id=',id);
const money=document.getElementById('money').value;
const description=document.getElementById('description').value;
const category=document.getElementById('category').value;
const buttonSubmit=document.getElementById('submit');
const tokendata=localStorage.getItem('token');
        const abc=JSON.parse(tokendata)
      const token=abc.tokenid;
      const ispremiumuser=abc.ispremiumuser;

const jsonData = {
money: money,
description: description,
category: category,
};

console.log('JSON=',jsonData);
try{
const response=await axios.put(`/updateexpence/${id}`,jsonData,{headers:{'Authorization':token}});
  const user=response.data;
  console.log('User Updated :',user);

  const userList = document.getElementById('expencelist');
        
        // Render each user as a list item
          const listItem = document.createElement('li');
            const editButton=document.createElement('button');
            editButton.value='Edit';
            //editButton.id=user.id;
            editButton.textContent='Edit';
            editButton.onclick=editItem;
            const deleteButton=document.createElement('button');
            deleteButton.value='delete';
            //deleteButton.id=user.id;
            deleteButton.onclick=deleteItem;
            deleteButton.textContent='Delete';

           const value= `${user.money} ${user.description} ${user.category} `;
           listItem.textContent=value;
           listItem.appendChild(editButton);
           listItem.appendChild(deleteButton);
          userList.appendChild(listItem);
          buttonSubmit.innerHTML='Add Expence';
          buttonSubmit.onclick=addexpence;
 
 
document.getElementById('money').value='';
document.getElementById('description').value='';
document.getElementById('category').value='';
alert('product updated successfully');

}catch(error){
  console.log('error while udpating=',error);
}

}




}

async function showleaderboard(){
  try{
      document.getElementById("leaderboarddata").innerHTML="";
        document.getElementById('leaderboardheading').textContent='Leader Board'
        const response=await axios.get('leaderboard');
      const userdata=response.data;
      const length=response.data.length;
      const ul=document.getElementById("leaderboarddata");
      for(let i=0;i<length;i++){
        const username=userdata[i].name;
        const total_cost=userdata[i].total_expenses;
        const dataformat=`Name-${username} Total Expenses-${total_cost}`
        console.log(dataformat);
        const li=document.createElement('li');
        li.textContent=dataformat;
        ul.appendChild(li);
        
      }


  }catch(error){
    console.log('something went wrong in showleaderboard=',error);
  }
}

    }catch(error){
      console.log('error while loading content from server',error);
    }

}



document.addEventListener("DOMContentLoaded",fetchexpences);

async function addexpence(){
  console.log('addexpence function called');
  try {
  const money=document.getElementById('money').value;
  const description=document.getElementById('description').value;
  const category=document.getElementById('category').value;
  const tokendata=localStorage.getItem('token');
  const abc=JSON.parse(tokendata);
  const token=abc.tokenid;
  const userstatus=abc.ispremium;
  const ul=document.getElementById('expencelist');
console.log('Moeny=',money, 'description=',description, 'category=',category);
  if(money && description && category){
  const expencedata={
    money:money,
    description:description,
    category:category,
  }
console.log('form data=',expencedata);
const response=await axios.post('/addexpence',expencedata,{headers:{'Authorization':token}},);
console.log('response data1=',response.data.MESSAGE);
const status=response.data.MESSAGE;
if(status==='success'){
  alert('expence created successfully');
  const user=response.data.data;
  document.getElementById('money').value='';
  document.getElementById('description').value='';
  document.getElementById('category').value='';
    const buttonText=document.getElementById('btn');
          //console.log('id=',user.id);
        const userList = document.getElementById('expencelist');

        // Render each user as a list item
          
          const listItem = document.createElement('li');
            const editButton=document.createElement('button');
            editButton.value='Edit';
            editButton.id=user.id;
            editButton.textContent='Edit';
            editButton.className='editItem';
            editButton.onclick=editItem;
            const deleteButton=document.createElement('button');
            deleteButton.value='delete';
            deleteButton.id=user.id;
            deleteButton.onclick=deleteItem;
            deleteButton.className='deleteItem';
            deleteButton.textContent='Delete';

           const value= `${user.money} ${user.description} ${user.category} `;
           listItem.textContent=value;
           listItem.appendChild(editButton);
           listItem.appendChild(deleteButton);
          userList.appendChild(listItem);
}
}
else{
  console.log('something went wrong-',response.data.MESSAGE);
}
} 
       catch (error) {
        alert('internal server error ')
        console.error('Error fetching users:', error.response.data.MESSAGE,' with status code=',error.response.status);
      }


async function editItem(event){

const id=event.target.id;
//console.log('edit item id=',id);
console.log('edit product fun2 called and id is=',event.target.id);
    
try{
    const response=await axios.get(`/editexpence/${id}`);

const user = response.data;
console.log('response=',user);
// Get the <ul> element to append the users
const userList = document.getElementById('expencelist');

// Render each user as a list item

document.getElementById('money').value=user.money;
document.getElementById('description').value=user.description;
document.getElementById('category').value=user.category;
//document.getElementById('userid').value=user.id;
document.getElementById('submit').innerHTML='Update Product';
document.getElementById('submit').onclick=UpdateProduct;
document.getElementById('expenceid').value=user.id;
const li=event.target.parentElement;
console.log('li=',li);
userList.removeChild(li);      
}
catch(error){
    console.log('getting error while fetching data from server =',error);

}
}
async function deleteItem(event){
console.log('product deleted  fun1 successfully');
const tokendata=localStorage.getItem('token');
const parsedToken=JSON.parse(tokendata);
const token=parsedToken.tokenid;
const id=event.target.id;
console.log('value of id=',id);
console.log(`Button ${id} was clicked.`);
try{
const response=await axios.delete(`/deleteexpence/${id}`,{headers:{'Authorization':token}})
console.log('delete response=',response);

if(response){
  console.log('User Deleted :',response.data)
const userList = document.getElementById('expencelist');
const li=event.target.parentElement;
console.log(li);

userList.removeChild(li);

}
else{
console.log('something went wrong');
}

}catch(error){
    console.log('getting error while fetching data from server =',error);

}

} //delete function closed

async function UpdateProduct(event){

console.log('update product2 function called');
const id=document.getElementById('expenceid').value;
console.log('update expence id=',id);
const money=document.getElementById('money').value;
const description=document.getElementById('description').value;
const category=document.getElementById('category').value;
const buttonSubmit=document.getElementById('submit');
const tokendata=localStorage.getItem('token');
const abc=JSON.parse(tokendata);
const token=abc.tokenid;

const jsonData = {
money: money,
description: description,
category: category,
};

console.log('JSON=',jsonData);
try{
const response=await axios.put(`/updateexpence/${id}`,jsonData,{headers:{'Authorization':token}});
  const user=response.data;
  console.log('User Updated :',user);

  const userList = document.getElementById('expencelist');
        
        // Render each user as a list item
          const listItem = document.createElement('li');
            const editButton=document.createElement('button');
            editButton.value='Edit';
            editButton.id=user.id;
            editButton.textContent='Edit';
            editButton.onclick=editItem;
            const deleteButton=document.createElement('button');
            deleteButton.value='delete';
            deleteButton.id=user.id;
            deleteButton.onclick=deleteItem;
            deleteButton.textContent='Delete';
          document.getElementById('expenceid').value=user.id
           const value= `${user.money} ${user.description} ${user.category} `;
           listItem.textContent=value;
           listItem.appendChild(editButton);
           listItem.appendChild(deleteButton);
          userList.appendChild(listItem);
          buttonSubmit.innerHTML='Add Expence';
          buttonSubmit.onclick=addexpence;
 
 
document.getElementById('money').value='';
document.getElementById('description').value='';
document.getElementById('category').value='';
alert('product updated successfully');

}catch(error){
  console.log('error while udpating=',error);
}

}
}

async function buypremium(e){
  const ispremium=document.getElementById('buypremium').textContent;
  const tokendata=localStorage.getItem('token');
  const abc=JSON.parse(tokendata);
  const token=abc.tokenid;
  const userstatus=abc.ispremium;
  console.log('userstatus=',userstatus, 'token=',token);
  if(userstatus){
    confirm('You are premium user');
  }
  else{
  //e.preventDefault();
  const response=await axios.get('buypremium',{headers:{'Authorization':token}});
  console.log('RESONSE=',response);
  console.log('key_id=',response.data.key_id);
  console.log('order id=',response.data.order.id);
  var options = {
    "key": response.data.key_id, // Enter the Key ID generated from the Dashboard
    "name": "ABC CORP",
    "description": "Test Transaction",
    "image": "https://www.letstrack.com/img/logo.png",
    "order_id": response.data.order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    "handler":async function (response){
      alert('Transaction Successfull');
        alert(response.razorpay_payment_id);
        alert(response.razorpay_order_id);
        alert(response.razorpay_signature);
        try{
       const updateresponse= await axios.post('http://127.0.0.1:3000/updatetransactionstatus',{
          order_id:options.order_id,
          payment_id:response.razorpay_payment_id,
          order_status:1
        },{headers:{"Authorization":token}})
        const tokendatalocal=localStorage.getItem('token');
        const parsedToken=JSON.parse(tokendatalocal);
        const id=parsedToken.tokenid;
        const data={
          tokenid:id,
          ispremiumuser:true
        }
        const stringifyData=JSON.stringify(data);
        localStorage.setItem("token",stringifyData);
        console.log('STATUS=',updateresponse.data.MESSAGE);

        alert('you are a premium user now');
        location.reload();        

    }
  
    catch(error){
      console.log('error while updating transaction status=',error);
    }
    },
};
var rzp1 = new Razorpay(options);
rzp1.on('payment.failed', async (response)=>{
        console.log('failed response=',response);
        try{
        const updateresponse= await axios.post('http://127.0.0.1:3000/updatetransactionstatus',{
          order_id:options.order_id,
          payment_id:0,
          order_status:0
        },{headers:{"Authorization":token}})
        console.log('failed order response=',updateresponse.data.MESSAGE);
        const tokendata=localStorage.getItem('token');
        const data={
          tokenid:tokendata.tokenid,
          ispremiumuser:false
        }
        localStorage.setItem('token',data);
        alert('TRANSACTION FAILED');
        alert(response.error.code);
        alert(response.error.description);
        alert(response.error.source);
        alert(response.error.step);
        alert(response.error.reason);
        alert(response.error.metadata.order_id);
        alert(response.error.metadata.payment_id);
        location.reload();
      }catch(error){
        console.log('error=',error);
      }
      });

 console.log('razorpay fun is called');
    rzp1.open();
    
  }
}



</script>

</body>
</html>
